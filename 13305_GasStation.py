# 220627
# 주유소
# N개의 도시가 일직선 도로 위에 있다.
# 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다.
# 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다.
# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다.
# 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다.
# 각 도시에는 단 하나의 주유소가 있으며, 도시마다 주유소의 리터당 가격은 다를 수 있다.
# 각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램

# 입력1) 도시의 개수 정수 N (2 <= N <= 100,000)
# 입력2) 인접한 두 도시를 연결하는 도로의 길이를 제일 왼쪽 도로부터 N-1개의 자연수로 입력. 거리는 1 이상 1,000,000,000 이하의 자연수
# 입력3) 주유소의 리터당 가격을 제일 왼쪽 도시부터 순서대로 N개의 자연수로 입력. 가격은 1 이상 1,000,000,000 이하의 자연수

# 출력 : 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용

n = int(input())
dist = list(map(int, input().split())) # N-1개
price = list(map(int, input().split())) # N개

idx = 1
p = price[0]
total = sum(dist)
now = 0
result = 0

while now != total:
    for i in range(idx, n):
        result += p * dist[i-1]
        now += dist[i-1]
        if price[i] < p:
            idx = i + 1
            p = price[i]
            break

print(result)